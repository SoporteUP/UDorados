@page "/CalificacionParcAlum"
@page "/CalificacionParcAlum/{matriculaID}/{grupoID}/{cicloID}/{carreraID}/{profesorID}/{materiaID}"

@inject IJSRuntime JS;
@inject HttpClient httpClient
@inject SweetAlertService Swal;

@using DoradosBlazor.Client.Services;
@using DoradosBlazor.Shared;
@inject SesionEmail mySesionEmail;
@inject IUsuarioService usuarioService;

<div class="container-preinscripciones">
    <!-- Botón de regreso -->
    <div class="d-flex justify-content-end align-items-center mb-3">
        <a class="btn btn-outline-dark" href="GruposAlum/@carreraID/@cicloID/@grupoID/Parcial/@profesorID/@materiaID">
            <i class="bi bi-arrow-left-square fs-3 me-1"></i> Regresar
        </a>
    </div>

    <!-- Título principal -->
    <h3 class="main-title">Calificaciones del Alumno</h3>

    <!-- Información del alumno -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-6 col-md-3"><span class="fw-bold">ID.</span> @matriculaID</div>
                <div class="col-6 col-md-3"><span class="fw-bold">ALUMNO:</span> @Nombre</div>
                <div class="col-6 col-md-3"><span class="fw-bold">CICLO:</span> @CicloID</div>
                <div class="col-6 col-md-3"><span class="fw-bold">GRUPO:</span> @GrupoID</div>
            </div>
        </div>
    </div>

    <!-- Tabla de calificaciones parciales -->
    <div class="card mb-4">
        <div class="card-body p-2 p-sm-3">
            <div class="table-responsive">
                <table class="table table-striped align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>Calificacion ID</th>
                            <th>ID</th>
                            <th>Asignatura</th>
                            <th>Parcial 1</th>
                            <th>Parcial 2</th>
                            <th>Parcial 3</th>
                            <th>Promedio de Parciales</th>
                            <th>Examen Final</th>
                            <th>Calificacion Final</th>
                            <th>Observaciones</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (listaCalificacionParcAlumAppDTO == null || listaCalificacionParcAlumAppDTO.Count == 0)
                        {
                            <tr>
                                <td colspan="11" class="text-center">
                                    <img src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" alt="Cargando..." style="width:50px;" />
                                </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var item in listaCalificacionParcAlumAppDTO)
                            {
                                <tr>
                                    <td>@item.CalificacionID</td>
                                    <td>@item.MateriaID</td>
                                    <td>@item.Materia</td>
                                    <td>@item.Parcial1</td>
                                    <td>@item.Parcial2</td>
                                    <td>@item.Parcial3</td>
                                    <td>@item.PromediodeParciales</td>
                                    <td>@item.ExamenFinal</td>
                                    <td>@item.CalificacionFinal</td>
                                    <td>@item.Observaciones</td>
                                    <td>
                                        <button class="btn btn-outline-primary btn-sm" title="Editar"
                                                @onclick="@(() => ShowModal("#staticBackdrop", @item.Parcial1, @item.Parcial2, @item.Parcial3, @item.PromediodeParciales, @item.ExamenFinal, @item.CalificacionFinal, @item.Observaciones, @item.CalificacionID.ToString()))">
                                            <i class="bi bi-pencil-square fs-5"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Modal de edición de calificaciones -->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content modal-contenido">
                <div class="modal-header">
                    <h5 class="modal-title fs-5" id="staticBackdropLabel">Calificaciones Parciales</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" @onclick="CerrarModal"></button>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col">
                            <label class="form-label">Parcial 1</label>
                            @if (editaCalifParc.Parcial1 == "" || editaCalifParc.Parcial1 == "0")
                            {
                                <input type="text" class="form-control" @bind="editaCalifParc.Parcial1">
                            }
                            else
                            {
                                <input type="text" class="form-control" @bind="editaCalifParc.Parcial1" disabled>
                            }
                        </div>
                        <div class="col">
                            <label class="form-label">Parcial 2</label>
                            @if (editaCalifParc.Parcial2 == "" || editaCalifParc.Parcial2 == "0")
                            {
                                <input type="text" class="form-control" @bind="editaCalifParc.Parcial2">
                            }
                            else
                            {
                                <input type="text" class="form-control" @bind="editaCalifParc.Parcial2" disabled>
                            }
                        </div>
                        <div class="col">
                            <label class="form-label">Parcial 3</label>
                            @if (editaCalifParc.Parcial3 == "" || editaCalifParc.Parcial3 == "0")
                            {
                                <input type="text" class="form-control" @bind="editaCalifParc.Parcial3">
                            }
                            else
                            {
                                <input type="text" class="form-control" @bind="editaCalifParc.Parcial3" disabled>
                            }
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <label class="form-label">Promedio de Parciales</label>
                            <input type="text" class="form-control" @bind="editaCalifParc.PromediodeParciales" disabled>
                        </div>
                        <div class="col">
                            <label class="form-label">Examen Final</label>
                            @if (editaCalifParc.ExamenFinal == "" || editaCalifParc.ExamenFinal == "0")
                            {
                                <input type="text" class="form-control" @bind="editaCalifParc.ExamenFinal">
                            }
                            else
                            {
                                <input type="text" class="form-control" @bind="editaCalifParc.ExamenFinal" disabled>
                            }
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Calificacion Final</label>
                        <input type="text" class="form-control" @bind="editaCalifParc.CalificacionFinal" disabled>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Observaciones</label>
                        <textarea class="form-control" id="exampleFormControlTextarea1" rows="3" @bind="editaCalifParc.Observaciones"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" @onclick="CerrarModal">Cerrar</button>
                    <button type="button" class="btn btn-azul" @onclick="GuardarYSalirAsync">
                        Guardar y Salir
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string matriculaID { get; set; } = "";
    [Parameter] public string grupoID { get; set; } = "";
    [Parameter] public string cicloID { get; set; } = "";
    [Parameter] public string carreraID { get; set; } = "";
    [Parameter] public string profesorID { get; set; } = "";
    [Parameter] public string materiaID { get; set; } = "";

    public int CalifID;
    public string MatriculaID;
    public string Nombre;
    public string CicloID;
    public string GrupoID;
    private string Email;

    List<CalificacionParcAlumAppDTO>? listaCalificacionParcAlumAppDTO = null;
    private CalificacionAlumAppVarDTO CalificacionParcAlumAppVar = new CalificacionAlumAppVarDTO();
    private EditaCalifParcDTO editaCalifParc = new EditaCalifParcDTO();
    private UCalifParcAppVarDTO uCalifParcAppVar = new UCalifParcAppVarDTO();
    List<ST_S_GposEmpaquetadosListosDTO>? ListaGposEmpaquetadosListos = null;
    private ST_S_GposEmpaquetadosVarDTO sT_S_GposEmpaquetadosVarDTO = new ST_S_GposEmpaquetadosVarDTO();

    protected override async Task OnInitializedAsync()
    {
        Email = mySesionEmail.Email;
        CalificacionParcAlumAppVar.iTipoConsulta = 1;
        CalificacionParcAlumAppVar.sMatriculaID = matriculaID;
        CalificacionParcAlumAppVar.sGrupoID = grupoID;
        CalificacionParcAlumAppVar.sCicloID = cicloID;
        CalificacionParcAlumAppVar.Email = Email;
        CalificacionParcAlumAppVar.MateriaID = materiaID;

        listaCalificacionParcAlumAppDTO = await usuarioService.ListaCalificacionParcAlumApp(CalificacionParcAlumAppVar);

        if (listaCalificacionParcAlumAppDTO != null && listaCalificacionParcAlumAppDTO.Count > 0)
        {
            MatriculaID = listaCalificacionParcAlumAppDTO[0].MatriculaID.ToString();
            Nombre = listaCalificacionParcAlumAppDTO[0].Nombre.ToString();
            CicloID = listaCalificacionParcAlumAppDTO[0].CicloID.ToString();
            GrupoID = listaCalificacionParcAlumAppDTO[0].GrupoID.ToString();
        }
        else
        {
            MatriculaID = "";
            Nombre = "";
            CicloID = "";
            GrupoID = "";
        }

    }

    // Abre el modal siempre con JSInterop
    protected async Task ShowModal(string modalId, string Parc1, string Parc2, string Parc3, string PromediodeParciales, string ExamenFinal, string CalificacionFinal, string Obse, string CalificacionID)
    {
        editaCalifParc.Parcial1 = Parc1;
        editaCalifParc.Parcial2 = Parc2;
        editaCalifParc.Parcial3 = Parc3;
        editaCalifParc.PromediodeParciales = PromediodeParciales;
        editaCalifParc.ExamenFinal = ExamenFinal;
        editaCalifParc.CalificacionFinal = CalificacionFinal;
        editaCalifParc.Observaciones = Obse;

        sT_S_GposEmpaquetadosVarDTO.iTipoOperacion = 1;
        sT_S_GposEmpaquetadosVarDTO.CarreraID = Convert.ToDecimal(carreraID);
        sT_S_GposEmpaquetadosVarDTO.CicloID = cicloID;
        sT_S_GposEmpaquetadosVarDTO.GrupoID = grupoID;
        sT_S_GposEmpaquetadosVarDTO.ProfesorID = Convert.ToInt32(profesorID);
        sT_S_GposEmpaquetadosVarDTO.MateriaID = materiaID;

        ListaGposEmpaquetadosListos = await usuarioService.ListaGposEmpaquetadosListos(sT_S_GposEmpaquetadosVarDTO);

        if (ListaGposEmpaquetadosListos[0].Empaquetado > 0)
        {
            await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Error",
                    Text = "No se pueden editar las calficaciones, el grupo ya fue empaquetado",
                    Icon = SweetAlertIcon.Error,
                    ShowCancelButton = true
                });
        }
        else
        {
            CalifID = int.Parse(CalificacionID);
            await JS.InvokeVoidAsync("mostrarModal", "#staticBackdrop");
        }
    }

    // Cerrar modal
    private async Task CerrarModal()
    {
        await JS.InvokeVoidAsync("cerrarModal", "#staticBackdrop");
    }

    // Guardar y cerrar modal
    private async Task GuardarYSalirAsync()
    {
        uCalifParcAppVar.iTipoOperacion = 1;
        uCalifParcAppVar.iCalificacionID = CalifID;
        uCalifParcAppVar.Parcial1 = editaCalifParc.Parcial1;
        uCalifParcAppVar.Parcial2 = editaCalifParc.Parcial2;
        uCalifParcAppVar.Parcial3 = editaCalifParc.Parcial3;
        uCalifParcAppVar.PromediodeParciales = editaCalifParc.PromediodeParciales;
        uCalifParcAppVar.ExamenFinal = editaCalifParc.ExamenFinal;
        uCalifParcAppVar.CalificacionFinal = editaCalifParc.CalificacionFinal;
        uCalifParcAppVar.Observaciones = editaCalifParc.Observaciones;

        var loginResponse = await httpClient.PostAsJsonAsync<UCalifParcAppVarDTO>($"/api/Usuario/U_CalificaParcialesApp/", uCalifParcAppVar);
        if (loginResponse.IsSuccessStatusCode)
        {
            CalificacionParcAlumAppVar.iTipoConsulta = 1;
            CalificacionParcAlumAppVar.sMatriculaID = matriculaID;
            CalificacionParcAlumAppVar.sGrupoID = grupoID;
            CalificacionParcAlumAppVar.sCicloID = cicloID;

            listaCalificacionParcAlumAppDTO = await usuarioService.ListaCalificacionParcAlumApp(CalificacionParcAlumAppVar);

            MatriculaID = listaCalificacionParcAlumAppDTO[0].MatriculaID.ToString();
            Nombre = listaCalificacionParcAlumAppDTO[0].Nombre.ToString();
            CicloID = listaCalificacionParcAlumAppDTO[0].CicloID.ToString();
            GrupoID = listaCalificacionParcAlumAppDTO[0].GrupoID.ToString();

            await CerrarModal();
        }
        else
        {
            await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Error al Calificar",
                    Text = "No se Guardaron las Calificaciones",
                    Icon = SweetAlertIcon.Error,
                    ShowCancelButton = true
                });
        }
    }
}
