@page "/"
@layout LoginLayout
@inject SesionEmail mySesionEmail;
@inject HttpClient httpClient
@using DoradosBlazor.Client.Extensiones
@using DoradosBlazor.Shared
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager
@inject IJSRuntime JsRuntime
@using CurrieTechnologies.Razor.SweetAlert2;
@inject SweetAlertService Swal;

<div class="login-nube-container">
    <div class="login-nube-box">
        <div class="login-nube-left">

            <div class="login-logo">
                <img src="UDNL.png" alt="Logo UD" />
            </div>

            <h2>Hola!</h2>
            <p>Inicia sesión con tu cuenta</p>

            <form @onsubmit="HandleFormSubmit">
                <div class="nube-input">
                    <div class="icon"><i class="bi bi-envelope-fill"></i></div>
                    <input @bind="login.Correo" placeholder="E-mail" />
                </div>
                <div class="nube-input">
                    <div class="icon"><i class="bi bi-lock-fill"></i></div>
                    <input type="password" @bind="login.Password" placeholder="Password" />
                </div>
                <div class="nube-options">
                    <label><input type="checkbox" /> Remember me</label>
                    <a href="#">Forgot password?</a>
                </div>
                <button type="submit" class="nube-btn">INICIAR SESIÓN</button>
            </form>

            <div class="nube-register">
                Don’t have an account? <a href="/registro">Create</a>
            </div>
        </div>

        <div class="login-nube-right">
            <h2>Welcome Back!</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed pharetra magna nisl, at posuere sem dapibus sed.</p>
        </div>
    </div>
</div>


@code {
    private LoginDTO login = new LoginDTO();


    private async Task HandleFormSubmit()
    {
        await IniciarSesion();
    }

    private async Task IniciarSesion()
    {
        var loginResponse = await httpClient.PostAsJsonAsync<LoginDTO>("/api/Usuario/Login", login);
        if (loginResponse.IsSuccessStatusCode)
        {
            var sesionUsuario = await loginResponse.Content.ReadFromJsonAsync<SesionDTO>();
            var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
            await autenticacionExt.ActualizarEstadoAutenticacion(sesionUsuario);

            mySesionEmail.Email = login.Correo;
            navManager.NavigateTo($"/Index");
        }
        else
        {
            var resultado = await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Datos incorrectos",
                    Text = "El usuario o la contraseña son incorrectos",
                    Icon = SweetAlertIcon.Error,
                    ShowCancelButton = true
                });
        }
    }
}
